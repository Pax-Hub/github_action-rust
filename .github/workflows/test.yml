on:
  push:
    paths:
      - '.github/workflows/test.yml' # Run when this workflow changes
      - 'tests/**/src/**' # Run when the test project changes
      - 'action.yml' # Run when the action changes
  pull_request:
    paths:
      - '.github/workflows/test.yml' # Run when this workflow changes
      - 'tests/**/src/**' # Run when the test project changes
      - 'action.yml' # Run when the action changes
    branches: [main]
  workflow_dispatch: # Run when manually triggered
  workflow_call: # Run when called by another workflow

name: ðŸ§ª Test GitHub Action Job

jobs:
  test_github_action_job:
    name: ${{ matrix.job_name }}
    if: |
      !startsWith(github.event.head_commit.message, 'chore:')
      && !startsWith(github.event.head_commit.message, 'chore(')
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux
          # - windows
          # - apple
        cpu_architecture:
          - x86_64
          - aarch64
        subcommand:
          # - fmt
          # - clippy
          - check
          # - test
          # - doc
          # - build
        exclude:
          - platform: windows
            cpu_architecture: aarch64
          - platform: apple
            cpu_architecture: aarch64
        include:
          - platform: linux
            cicd_runner: ubuntu-latest
          # - platform: windows
          #   cicd_runner: windows-latest
          # - platform: apple
          #   cicd_runner: macos-latest
          - use_cross: true
          - compilation_target: x86_64-unknown-linux-gnu
            cpu_architecture: x86_64
            platform: linux
            toolchain: gnu
            use_cross: false
          # - compilation_target: x86_64-pc-windows-msvc
          #   cpu_architecture: x86_64
          #   platform: windows
          #   toolchain: msvc
          #   use_cross: false
          # - compilation_target: x86_64-apple-darwin
          #   cpu_architecture: x86_64
          #   platform: apple
          #   toolchain: darwin
          #   use_cross: false
          - compilation_target: aarch64-unknown-linux-gnu
            cpu_architecture: aarch64
            platform: linux
            toolchain: gnu         
          - subcommand: fmt
            job_name: ðŸ“‘ Format Job
            arguments: '--verbose -- --check'
          - subcommand: clippy
            job_name: ðŸ“Ž Clippy Job
            arguments: '--workspace -- -D warnings'
          - subcommand: check
            job_name: âœ… Check Job
            arguments: '--workspace'
          - subcommand: test
            job_name: ðŸ§ª Test Job
            arguments: '--workspace'
          - subcommand: doc
            job_name: ðŸ“œ Documentation Job
            arguments: '--workspace --all-features --no-deps --document-private-items'
          - subcommand: build
            job_name: ðŸ”¨ Build Job
            arguments: '--workspace --all-features --release'
    runs-on: ${{ matrix.cicd_runner }}
    steps:
      - name: ðŸŽŸ Checkout Git Repository Step
        id: repository_checkout_step
        uses: actions/checkout@v4
      - name: ${{ matrix.job_name }}
        id: task_step
        uses: ./
        with:
          subcommand: ${{ matrix.subcommand }}
          arguments: ${{ matrix.arguments }}
          rust_release_channel: nightly
          use_cross: ${{ matrix.use_cross }}
          compilation_target: ${{ matrix.compilation_target }}
          working_directory: ./tests/test_app
